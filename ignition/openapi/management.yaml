openapi: 3.0.0
info:
  description: APIs to manage the application
  version: "1.0.0"
  title: Management
servers:
  - url: /management
tags:
  - name: monitoring
    description: Monitoring APIs
  - name: logging
    description: Logging APIs
paths:
  /health:
    get:
      tags:
        - monitoring
      summary: Health Check
      description: >-
        Check the health of the application
      operationId: .health
      responses:
        "200":
          description: All key vitals of the application are reporting as OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthReport"
              examples:
                healthy:
                  $ref: "#/components/examples/ExampleHealthyReport"
        "503":
          description: At least one key vital of the application is reporting as UNHEALTHY
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthReport"
              examples:
                unhealthy:
                  $ref: "#/components/examples/ExampleUnhealthyReport"
  /logger/{logger}:
    get:
      tags:
        - logging
      summary: Get configuration of a logger
      description: >-
        Check the configuration of a logger by name
      operationId: .get_logger
      parameters:
        - in: path
          name: logger
          required: true
          schema:
            type: string
          description: The name of the logger
      responses:
        "200":
          description: The configuration of the logger
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Logger"
              examples:
                success:
                  $ref: "#/components/examples/ExampleLogger"
    put:
      tags:
        - logging
      summary: Update configuration of a logger
      description: >-
        Update the configuration of a logger by name
      operationId: .update_logger
      parameters:
        - in: path
          name: logger
          required: true
          schema:
            type: string
          description: The name of the logger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLoggerRequest'
            examples:
              example:
                $ref: '#/components/examples/ExampleUpdateLoggerRequest'
      responses:
        "200":
          description: The logger has been updated
        "400": 
          description: Bad request - an invalid log level was used
        
components:
  schemas:
    HealthReport:
      type: object
      properties:
        vitals:
          $ref: '#/components/schemas/HealthVitals'
    HealthVitals:
      type: object
      properties:
        app: 
          $ref: '#/components/schemas/HealthVital'
      additionalProperties:
        $ref: '#/components/schemas/HealthVital'
    HealthVital:
      type: object
      properties:
        status: 
          $ref: '#/components/schemas/HealthStatus'
    HealthStatus:
      type: string
      enum: 
        - OK
        - UNHEALTHY
    Logger:
      type: object
      properties:
        level:
          type: string
    UpdateLoggerRequest:
      type: object
      properties:
        level: 
          type: string
  examples:
    ExampleHealthyReport:
      value:
        vitals:
          app:
            status: OK
    ExampleUnhealthyReport:
      value:
        vitals: 
          app:
            status: UNHEALTHY
    ExampleLogger:
      value:
        level: DEBUG
    ExampleUpdateLoggerRequest:
      value:
        level: DEBUG